'''
민철이네 회사는 최근 기밀문서가 유출되는 일이 발생했습니다.

이러한 일을 방지하고자 민철이네 팀은 모든 문서를 암호화하고 복호화하는 1차 알고리즘을 개발을 담당하게 되었습니다.

그 중에서도 민철이는 복호화 알고리즘을 구현 및 테스트를 담당하게 되었습니다.



이번에 구현 및 테스트를 할 복호화 방법으로는 아래와 같습니다.

암호화된 문자열과 키 문자열이 주어집니다.
키 문자열을 구성하는 각 문자를 암호화된 문자열에서 순서대로 찾아 제거합니다. i 번째 키 문자는 i + 1 번째 키 문자보다 항상 먼저 나옵니다.
키 문자열을 구성하는 문자가 암호화된 문자열에서 여러 개 나오는 경우 가장 빨리 매칭되는 문자를 제거합니다.


예를 들어 "baabccbc"에서 키 문자열이 "abc"인 경우, 두 번째 위치의 'a', 네 번째 위치의 'b', 다섯 번째 위치의 'c'를 순서대로 제거한 "bacb"가 원본 문자열이 됩니다.

("baabccbc" -> "bacbc")



민철이를 도와 암호화된 문자열과 키 문자열이 주어질 때, 원본 문자열을 찾는 복호화 알고리즘을 구현해 주세요.

입력
첫 번째 줄에 암호화된 문자열이 주어집니다.

암호화된 문자열의 길이는 100,000 이하인 문자열입니다.
두 번째 줄에 키 문자열이 주어집니다.

키 문자열의 길이는 10,000 이하인 문자열입니다.

출력
복호화 알고리즘을 통해 찾은 원본 문자열을 출력합니다.

xayazbxbxczczyx
aabbcc
-> xyzxxzzyx

baabccbc
abc
-> bacbc
'''

f = "xayazbxbxczczyx"
b = "aabbcc"
f = "baabccbcaaaccccbbbcccaaa"
b = "abc"

cnt = 0
for item in f:
    if cnt < len(b) and item == b[cnt]:
         cnt = cnt + 1
    else:
        print(item, end="")
